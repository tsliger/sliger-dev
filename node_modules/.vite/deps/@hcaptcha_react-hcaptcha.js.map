{
  "version": 3,
  "sources": ["../../@hcaptcha/react-hcaptcha/dist/esm/index.js", "../../@hcaptcha/react-hcaptcha/dist/esm/utils.js"],
  "sourcesContent": ["import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport * as React from 'react';\nimport { generateQuery, getFrame, getMountElement } from './utils.js';\nvar SCRIPT_ID = 'hcaptcha-api-script-id';\nvar HCAPTCHA_LOAD_FN_NAME = 'hcaptchaOnLoad'; // Prevent loading API script multiple times\n\nvar scripts = []; // Generate hCaptcha API script\n\nvar mountCaptchaScript = function mountCaptchaScript(params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  var element = getMountElement(params.scriptLocation);\n  delete params.scriptLocation;\n  var frame = getFrame(element);\n  var script = scripts.find(function (_ref) {\n    var scope = _ref.scope;\n    return scope === frame.window;\n  });\n\n  if (frame.document.getElementById(SCRIPT_ID) && script) {\n    // API was already requested\n    return script.promise;\n  }\n\n  var promise = new Promise(function (resolve, reject) {\n    // Create global onload callback\n    frame.window[HCAPTCHA_LOAD_FN_NAME] = resolve;\n    var domain = params.apihost || \"https://js.hcaptcha.com\";\n    delete params.apihost;\n    var script = frame.document.createElement(\"script\");\n    script.id = SCRIPT_ID;\n    script.src = domain + \"/1/api.js?render=explicit&onload=\" + HCAPTCHA_LOAD_FN_NAME;\n    script.async = params.loadAsync !== undefined ? params.loadAsync : true;\n    delete params.loadAsync;\n\n    script.onerror = function (event) {\n      return reject('script-error');\n    };\n\n    var query = generateQuery(params);\n    script.src += query !== \"\" ? \"&\" + query : \"\";\n    element.appendChild(script);\n  });\n  scripts.push({\n    promise: promise,\n    scope: frame.window\n  });\n  return promise;\n};\n\nvar HCaptcha = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(HCaptcha, _React$Component);\n\n  function HCaptcha(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    /**\n     * Internal reference to track hCaptcha API\n     *\n     * Required as window is relative to initialization in application\n     * not where the script and iFrames have been loaded.\n     */\n\n    _this._hcaptcha = undefined; // API Methods\n\n    _this.renderCaptcha = _this.renderCaptcha.bind(_assertThisInitialized(_this));\n    _this.resetCaptcha = _this.resetCaptcha.bind(_assertThisInitialized(_this));\n    _this.removeCaptcha = _this.removeCaptcha.bind(_assertThisInitialized(_this));\n    _this.isReady = _this.isReady.bind(_assertThisInitialized(_this)); // Event Handlers\n\n    _this.loadCaptcha = _this.loadCaptcha.bind(_assertThisInitialized(_this));\n    _this.handleOnLoad = _this.handleOnLoad.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleExpire = _this.handleExpire.bind(_assertThisInitialized(_this));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_this));\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    _this.handleChallengeExpired = _this.handleChallengeExpired.bind(_assertThisInitialized(_this));\n    _this.ref = /*#__PURE__*/React.createRef();\n    _this.apiScriptRequested = false;\n    _this.state = {\n      isApiReady: false,\n      isRemoved: false,\n      elementId: props.id,\n      captchaId: ''\n    };\n    return _this;\n  }\n\n  var _proto = HCaptcha.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    // Once captcha is mounted intialize hCaptcha - hCaptcha\n    var element = getMountElement(this.props.scriptLocation);\n    var frame = getFrame(element);\n    this._hcaptcha = frame.window.hcaptcha || undefined;\n    var isApiReady = typeof this._hcaptcha !== 'undefined';\n    /*\n     * Check if hCaptcha has already been loaded,\n     * If Yes, render the captcha\n     * If No, create script tag and wait to render the captcha\n     */\n\n    if (isApiReady) {\n      this.setState({\n        isApiReady: true\n      }, function () {\n        _this2.renderCaptcha();\n      });\n      return;\n    }\n\n    this.loadCaptcha();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    } // Reset any stored variables / timers when unmounting\n\n\n    hcaptcha.reset(captchaId);\n    hcaptcha.remove(captchaId);\n  };\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    // Prevent component re-rendering when these internal state variables are updated\n    if (this.state.isApiReady !== nextState.isApiReady || this.state.isRemoved !== nextState.isRemoved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this3 = this;\n\n    // Prop Keys that could change\n    var keys = ['sitekey', 'size', 'theme', 'tabindex', 'languageOverride', 'endpoint']; // See if any props changed during component update\n\n    var match = keys.every(function (key) {\n      return prevProps[key] === _this3.props[key];\n    }); // If they have changed, remove current captcha and render a new one\n\n    if (!match) {\n      this.removeCaptcha(function () {\n        _this3.renderCaptcha();\n      });\n    }\n  };\n\n  _proto.loadCaptcha = function loadCaptcha() {\n    if (this.apiScriptRequested) {\n      return;\n    }\n\n    var _this$props = this.props,\n        apihost = _this$props.apihost,\n        assethost = _this$props.assethost,\n        endpoint = _this$props.endpoint,\n        host = _this$props.host,\n        imghost = _this$props.imghost,\n        hl = _this$props.languageOverride,\n        reCaptchaCompat = _this$props.reCaptchaCompat,\n        reportapi = _this$props.reportapi,\n        sentry = _this$props.sentry,\n        custom = _this$props.custom,\n        loadAsync = _this$props.loadAsync,\n        scriptLocation = _this$props.scriptLocation;\n    var mountParams = {\n      apihost: apihost,\n      assethost: assethost,\n      endpoint: endpoint,\n      hl: hl,\n      host: host,\n      imghost: imghost,\n      recaptchacompat: reCaptchaCompat === false ? \"off\" : null,\n      reportapi: reportapi,\n      sentry: sentry,\n      custom: custom,\n      loadAsync: loadAsync,\n      scriptLocation: scriptLocation\n    };\n    mountCaptchaScript(mountParams).then(this.handleOnLoad)[\"catch\"](this.handleError);\n    this.apiScriptRequested = true;\n  };\n\n  _proto.renderCaptcha = function renderCaptcha(onReady) {\n    var isApiReady = this.state.isApiReady;\n    if (!isApiReady) return;\n    var renderParams = Object.assign({\n      \"open-callback\": this.handleOpen,\n      \"close-callback\": this.handleClose,\n      \"error-callback\": this.handleError,\n      \"chalexpired-callback\": this.handleChallengeExpired,\n      \"expired-callback\": this.handleExpire,\n      \"callback\": this.handleSubmit\n    }, this.props, {\n      hl: this.props.hl || this.props.languageOverride,\n      languageOverride: undefined\n    });\n    var hcaptcha = this._hcaptcha; //Render hCaptcha widget and provide necessary callbacks - hCaptcha\n\n    var captchaId = hcaptcha.render(this.ref.current, renderParams);\n    this.setState({\n      isRemoved: false,\n      captchaId: captchaId\n    }, function () {\n      onReady && onReady();\n    });\n  };\n\n  _proto.resetCaptcha = function resetCaptcha() {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    } // Reset captcha state, removes stored token and unticks checkbox\n\n\n    hcaptcha.reset(captchaId);\n  };\n\n  _proto.removeCaptcha = function removeCaptcha(callback) {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    this.setState({\n      isRemoved: true\n    }, function () {\n      hcaptcha.remove(captchaId);\n      callback && callback();\n    });\n  };\n\n  _proto.handleOnLoad = function handleOnLoad() {\n    var _this4 = this;\n\n    this.setState({\n      isApiReady: true\n    }, function () {\n      var element = getMountElement(_this4.props.scriptLocation);\n      var frame = getFrame(element);\n      _this4._hcaptcha = frame.window.hcaptcha; // render captcha and wait for captcha id\n\n      _this4.renderCaptcha(function () {\n        // trigger onLoad if it exists\n        var onLoad = _this4.props.onLoad;\n        if (onLoad) onLoad();\n      });\n    });\n  };\n\n  _proto.handleSubmit = function handleSubmit(event) {\n    var onVerify = this.props.onVerify;\n    var _this$state = this.state,\n        isRemoved = _this$state.isRemoved,\n        captchaId = _this$state.captchaId;\n    var hcaptcha = this._hcaptcha;\n    if (typeof hcaptcha === 'undefined' || isRemoved) return;\n    var token = hcaptcha.getResponse(captchaId); //Get response token from hCaptcha widget\n\n    var ekey = hcaptcha.getRespKey(captchaId); //Get current challenge session id from hCaptcha widget\n\n    if (onVerify) onVerify(token, ekey); //Dispatch event to verify user response\n  };\n\n  _proto.handleExpire = function handleExpire() {\n    var onExpire = this.props.onExpire;\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    hcaptcha.reset(captchaId); // If hCaptcha runs into error, reset captcha - hCaptcha\n\n    if (onExpire) onExpire();\n  };\n\n  _proto.handleError = function handleError(event) {\n    var onError = this.props.onError;\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (this.isReady()) {\n      // If hCaptcha runs into error, reset captcha - hCaptcha\n      hcaptcha.reset(captchaId);\n    }\n\n    if (onError) onError(event);\n  };\n\n  _proto.isReady = function isReady() {\n    var _this$state2 = this.state,\n        isApiReady = _this$state2.isApiReady,\n        isRemoved = _this$state2.isRemoved;\n    return isApiReady && !isRemoved;\n  };\n\n  _proto.handleOpen = function handleOpen() {\n    if (!this.isReady() || !this.props.onOpen) {\n      return;\n    }\n\n    this.props.onOpen();\n  };\n\n  _proto.handleClose = function handleClose() {\n    if (!this.isReady() || !this.props.onClose) {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  _proto.handleChallengeExpired = function handleChallengeExpired() {\n    if (!this.isReady() || !this.props.onChalExpired) {\n      return;\n    }\n\n    this.props.onChalExpired();\n  };\n\n  _proto.execute = function execute(opts) {\n    if (opts === void 0) {\n      opts = null;\n    }\n\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    if (opts && typeof opts !== \"object\") {\n      opts = null;\n    }\n\n    return hcaptcha.execute(captchaId, opts);\n  };\n\n  _proto.setData = function setData(data) {\n    var captchaId = this.state.captchaId;\n    var hcaptcha = this._hcaptcha;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    if (data && typeof data !== \"object\") {\n      data = null;\n    }\n\n    hcaptcha.setData(captchaId, data);\n  };\n\n  _proto.getResponse = function getResponse() {\n    var hcaptcha = this._hcaptcha;\n    return hcaptcha.getResponse(this.state.captchaId);\n  };\n\n  _proto.getRespKey = function getRespKey() {\n    var hcaptcha = this._hcaptcha;\n    return hcaptcha.getRespKey(this.state.captchaId);\n  };\n\n  _proto.render = function render() {\n    var elementId = this.state.elementId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.ref,\n      id: elementId\n    });\n  };\n\n  return HCaptcha;\n}(React.Component);\n\nexport default HCaptcha;", "function generateQuery(params) {\n  return Object.entries(params).filter(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return value || value === false;\n  }).map(function (_ref2) {\n    var key = _ref2[0],\n        value = _ref2[1];\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n  }).join(\"&\");\n}\n\n;\n\nfunction getFrame(element) {\n  var doc = element && element.ownerDocument || document;\n  var win = doc.defaultView || doc.parentWindow || window;\n  return {\n    document: doc,\n    window: win\n  };\n}\n\nfunction getMountElement(element) {\n  return element || document.head;\n}\n\nexport { generateQuery, getFrame, getMountElement };"],
  "mappings": "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",
  "names": ["mountCaptchaScript", "script", "HCaptcha"]
}
